// –î–µ–º–æ-—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ä–∞–±–æ—Ç—ã mock –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
import {
  Alert,
  Box,
  Card,
  CardContent,
  Chip,
  Grid,
  List,
  ListItem,
  ListItemText,
  Typography,
} from '@mui/material';
import { useAppSelector } from '../../app/hooks';
import { selectMockUser } from '../../features/auth/mockAuthSlice';

export const DemoPage = () => {
  const user = useAppSelector(selectMockUser);

  if (!user) {
    return (
      <Box sx={{ p: 3 }}>
        <Alert severity="error">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.</Alert>
      </Box>
    );
  }

  return (
    <Box sx={{ p: 3 }}>
      <Typography variant="h4" gutterBottom>
        –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –ù–ù–ì–ü!
      </Typography>

      <Typography variant="h6" color="text.secondary" gutterBottom>
        –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
      </Typography>

      <Grid container spacing={3} sx={{ mt: 2 }}>
        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */}
        <Grid item xs={12} md={6}>
          <Card>
            <CardContent>
              <Typography variant="h6" gutterBottom>
                –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
              </Typography>

              <Box sx={{ mb: 2 }}>
                <Typography variant="body2" color="text.secondary">
                  –ò–º—è:
                </Typography>
                <Typography variant="body1">
                  {user.firstName} {user.lastName}
                </Typography>
              </Box>

              <Box sx={{ mb: 2 }}>
                <Typography variant="body2" color="text.secondary">
                  Email:
                </Typography>
                <Typography variant="body1">{user.email}</Typography>
              </Box>

              <Box sx={{ mb: 2 }}>
                <Typography variant="body2" color="text.secondary">
                  –†–æ–ª—å:
                </Typography>
                <Chip label={user.role} color="primary" variant="outlined" sx={{ mt: 0.5 }} />
              </Box>

              {user.phone && (
                <Box sx={{ mb: 2 }}>
                  <Typography variant="body2" color="text.secondary">
                    –¢–µ–ª–µ—Ñ–æ–Ω:
                  </Typography>
                  <Typography variant="body1">{user.phone}</Typography>
                </Box>
              )}
            </CardContent>
          </Card>
        </Grid>

        {/* –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
        {user.profile && (
          <Grid item xs={12} md={6}>
            <Card>
              <CardContent>
                <Typography variant="h6" gutterBottom>
                  –ü—Ä–æ—Ñ–∏–ª—å
                </Typography>

                {user.profile.aboutMe && (
                  <Box sx={{ mb: 2 }}>
                    <Typography variant="body2" color="text.secondary">
                      –û —Å–µ–±–µ:
                    </Typography>
                    <Typography variant="body1">{user.profile.aboutMe}</Typography>
                  </Box>
                )}

                <Box sx={{ mb: 2 }}>
                  <Typography variant="body2" color="text.secondary">
                    –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:
                  </Typography>
                  <Typography variant="body1">{user.profile.specialization}</Typography>
                </Box>

                {user.profile.specialistLevel && (
                  <Box sx={{ mb: 2 }}>
                    <Typography variant="body2" color="text.secondary">
                      –£—Ä–æ–≤–µ–Ω—å:
                    </Typography>
                    <Chip
                      label={user.profile.specialistLevel}
                      color="secondary"
                      variant="outlined"
                      sx={{ mt: 0.5 }}
                    />
                  </Box>
                )}

                {user.profile.location && (
                  <Box sx={{ mb: 2 }}>
                    <Typography variant="body2" color="text.secondary">
                      –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:
                    </Typography>
                    <Typography variant="body1">{user.profile.location}</Typography>
                  </Box>
                )}
              </CardContent>
            </Card>
          </Grid>
        )}

        {/* –ù–∞–≤—ã–∫–∏ */}
        {user.profile?.skills && user.profile.skills.length > 0 && (
          <Grid item xs={12}>
            <Card>
              <CardContent>
                <Typography variant="h6" gutterBottom>
                  –ù–∞–≤—ã–∫–∏
                </Typography>

                <List>
                  {user.profile.skills.map((skill, index) => (
                    <ListItem key={index} divider>
                      <ListItemText
                        primary={skill.name}
                        secondary={
                          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mt: 0.5 }}>
                            <Chip label={skill.category} size="small" variant="outlined" />
                            <Typography variant="body2" color="text.secondary">
                              –£—Ä–æ–≤–µ–Ω—å: {skill.level}/10
                            </Typography>
                          </Box>
                        }
                      />
                    </ListItem>
                  ))}
                </List>
              </CardContent>
            </Card>
          </Grid>
        )}

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ */}
        <Grid item xs={12}>
          <Alert severity="success">
            <Typography variant="body2">
              ‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ –ª–æ–∫–∞–ª—å–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
              <br />
              üîê –î–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ localStorage –±—Ä–∞—É–∑–µ—Ä–∞
              <br />
              üöÄ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –±–µ–∑ backend —Å–µ—Ä–≤–µ—Ä–∞
            </Typography>
          </Alert>
        </Grid>
      </Grid>
    </Box>
  );
};
